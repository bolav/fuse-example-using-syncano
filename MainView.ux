<App Theme="Basic" ClearColor="#eeeeeeff">
	<DockPanel>
		<JavaScript File="./syncano-js/dist/syncano.js" ux:Global="Syncano" />
		<JavaScript File="api-keys.js" ux:Global="ApiKeys" />
		<JavaScript>
			debug_log("---- Starting ----");
			var Observable = require("FuseJS/Observable");
			var Syncano = require("Syncano");
			var ApiKeys = require("ApiKeys");

			var account = new Syncano({accountKey: ApiKeys.accountKey});

			// var instance = new Syncano({accountKey : ApiKeys.accountKey, instance: ApiKeys.instanceName });
			var classname = "tag";
			forceClass(classname);

			// var Tag = Parse.Object.extend("Tag");

			var tags = Observable();

			var updateInterval = 500;

			function forceClass(classname) {
				account.instance(ApiKeys.instanceName).class().list(function (a,response) {
					var obj = response.objects;
					var found = 0;
					for (var i = 0; i < obj.length; i++) {
						debug_log(obj[i].name);
						if (obj[i].name === classname) {
							found = 1;
							break;
						}
					}
					debug_log("Found " + found);
					if (found) {
						classExists(classname);
					}
					else {
						debug_log("Creating class");

						var options = {
						  "name":classname,
						  "description":"List of tags",
						  "schema":[
						    {"type":"string","name":"text"}
						  ]
						};

						account.instance(ApiKeys.instanceName).class().add(options, function (a, response) {
							classExists(classname);
						});

					}
					
				});
			}

			function classExists (classname) {
				updateTags();
			}

			function updateTags() {
				var filter = {
				  "orderBy": {"created_at" : "asc"}
				};

				account.instance(ApiKeys.instanceName).class(classname).dataobject().list(filter, function (a,response) {
					var serverTags = response.objects;
					for (var i = tags.length; i < serverTags.length; i++) {
						debug_log("Adding:  " + serverTags[i].tagtext);
						tags.add(serverTags[i].tagtext);
					}

					setTimeout(updateTags, updateInterval);
				});

			}

			var currentText = Observable("");
			function submit() {
				var object = {"tagtext": currentText.value};
				debug_log("object: " + JSON.stringify(object));

				account.instance(ApiKeys.instanceName).class(classname).dataobject().add(object, function (a,b) {
				});
				currentText.value = "";
			}

			module.exports = {
				currentText: currentText,
				submit: submit,
				tags: tags
			};
		</JavaScript>

		<StatusBarBackground Dock="Top" />
		<BottomBarBackground Dock="Bottom" />

		<Text Dock="Top" Alignment="Center" FontSize="80" Margin="0,50,0,50" TextColor="#1e88e5">tag</Text>

		<StackPanel Dock="Bottom" Margin="0,50,0,0">
			<Button Text="tag" Clicked="{submit}" />
			<TextInput Value="{currentText}" TextAlignment="Center" />
		</StackPanel>

		<ScrollView ClipToBounds="true">
			<StackPanel>
				<Each Items="{tags}">
					<Text Value="{}" TextWrapping="Wrap" Margin="9" TextAlignment="Center" />
				</Each>
			</StackPanel>
		</ScrollView>
	</DockPanel>
</App>

